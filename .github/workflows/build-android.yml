name: Build Vosk Android

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        abi: [arm64-v8a, armeabi-v7a, x86, x86_64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25b  # 你可以改成固定版本 r25b, r26, r27 等

      - name: Prepare environment
        run: |
          set -euxo pipefail
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "ABI=${{ matrix.abi }}" >> $GITHUB_ENV
          echo "WORK=$GITHUB_WORKSPACE/android/lib/build/${{ matrix.abi }}" >> $GITHUB_ENV
          mkdir -p $GITHUB_WORKSPACE/android/lib/build/${{ matrix.abi }}

      - name: Build OpenBLAS
        run: |
          set -euxo pipefail
          ABI=${{ matrix.abi }}
          WORK=$GITHUB_WORKSPACE/android/lib/build/$ABI
          cd $WORK

          # 克隆 OpenBLAS
          if [ ! -d OpenBLAS ]; then
            git clone -b v0.3.20 --single-branch https://github.com/xianyi/OpenBLAS
          fi

          # ABI 对应 TARGET
          case "$ABI" in
            arm64-v8a) TARGET=ARMV8 ;;
            armeabi-v7a) TARGET=ARMV7 ;;
            x86) TARGET=ATOM ;;
            x86_64) TARGET=NEHALEM ;;
          esac

          cmake -S "$WORK/OpenBLAS" -B "$WORK/openblas-build" \
            -G Ninja \
            -DCMAKE_TOOLCHAIN_FILE="$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake" \
            -DANDROID_ABI=$ABI \
            -DANDROID_PLATFORM=21 \
            -DBUILD_SHARED_LIBS=ON \
            -DNOFORTRAN=ON \
            -DDYNAMIC_ARCH=OFF \
            -DTARGET=$TARGET \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="$WORK/local" \
            -DBUILD_TESTING=OFF

          ninja -C "$WORK/openblas-build" -j8
          ninja -C "$WORK/openblas-build" install

      - name: Verify OpenBLAS
        run: |
          ABI=${{ matrix.abi }}
          WORK=$GITHUB_WORKSPACE/android/lib/build/$ABI
          echo "==== $ABI OpenBLAS ===="
          ls -lh $WORK/local/lib | head -20
          ls -lh $WORK/local/include | head -20

      # TODO: 后续步骤编译 OpenFST、Kaldi、Vosk
      # 目前你可以先确认 OpenBLAS 四个 ABI 都能构建成功
